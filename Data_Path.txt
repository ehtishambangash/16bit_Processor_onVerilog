module DATAPATH (op_code,rd_offset,rs_offset,rt_offset,shamt,constant,clk,rd);
input clk;
input [3:0] op_code;
input [2:0] rd_offset,rs_offset,rt_offset,shamt;
input [5:0] constant;
output reg [15:0] rd;
wire[15:0] hi_in,lo_in,hi_out,lo_out;
reg [15:0] rd,rs,rt,signextconst;
reg [15:0] regfile[0:7];
//////////////--REG-FILE--////////////////////////////
always@(posedge clk)
begin
  regfile[0]=16'b0000000000000001;
  regfile[1]=16'b0000000001000001;
  regfile[2]=16'b0000000000110111;
  regfile[3]=16'b0000000010000001;
  regfile[4]=16'b0000000111000010;
  regfile[5]=16'b0000000000011100;
  regfile[6]=16'b0000000000100100;
  regfile[7]=16'b0000000000010000;
end
//////////////////////////////////////////////

///////////////////////////////// INITITATING LO HI registers////////////////
reg [15:0] special_reg [0:2];
initial
begin
special_reg[0] = 16'b 0000000000000000;                 // hi register
special_reg[1] = 16'b 0000000000000000;                 // lo register
special_reg[2] = 16'b 0000000000000000;                 // SR register
end

always @ (constant)
begin
  signextconst= {{10{constant[5]}},constant};		//sign extension
end
  
always@(posedge clk)
begin
     if (op_code==0)
       begin
        rd=regfile[rd_offset];
        rs=regfile[rs_offset];
        rt=regfile[rt_offset];
       end
    else if ((op_code==1)|(op_code==2))
       begin
        rd=regfile[rd_offset];
        rs=regfile[rs_offset];
        rt=0;
       end
    else if((op_code==5)|(op_code==7)|(op_code==8))
       begin 
        rd=regfile[rd_offset];   
        rs=regfile[rs_offset];   
        rt=signextconst;
       end
    else if (op_code==6)
       begin
        rd=regfile[rd_offset];
       end
        else
       begin
         rd=regfile[rd_offset];
         rs=regfile[rs_offset];
         rt=regfile[rt_offset];
       end
end
assign lo_in = special_reg[1];
assign hi_in = special_reg[0];
	
  //ALUexe object3(op_code,rd,rs,rt,clk,outreg);
  ALU object3(rs,rt,signextconst,op_code,shamt,rd,hi_in,lo_in,hi_out,lo_out);
  
endmodule
